paths:
  /reviews/book/{bookId}:
    post:
      tags:
        - Reviews
      summary: Create a review
      description: Create a new review for a book
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: string
          description: ID of the book to review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewInput'
      responses:
        '201':
          description: Review created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '404':
          description: Book not found
        '409':
          description: User has already reviewed this book

    get:
      tags:
        - Reviews
      summary: Get book reviews
      description: Get paginated list of reviews for a specific book
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: sortBy
          schema:
            type: string
            default: createdAt
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: List of reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer

  /reviews/{reviewId}:
    put:
      tags:
        - Reviews
      summary: Update review
      description: Update user's own review
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewInput'
      responses:
        '200':
          description: Review updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Can only update own reviews
        '404':
          description: Review not found

    delete:
      tags:
        - Reviews
      summary: Delete review
      description: Delete a review (Admin or review owner)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Review deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Can only delete own reviews
        '404':
          description: Review not found

  /reviews/{reviewId}/vote:
    post:
      tags:
        - Reviews
      summary: Vote on review
      description: Upvote or downvote a review
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [voteType]
              properties:
                voteType:
                  type: string
                  enum: [upvote, downvote]
      responses:
        '200':
          description: Vote recorded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  review:
                    type: object
                    properties:
                      id:
                        type: string
                      upvotes:
                        type: integer
                      downvotes:
                        type: integer
                      userVote:
                        type: string
                        enum: [upvote, downvote, null]

  /reviews/{reviewId}/report:
    post:
      tags:
        - Reviews
      summary: Report review
      description: Report a review for moderation
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [reason]
              properties:
                reason:
                  type: string
      responses:
        '200':
          description: Review reported successfully
        '401':
          description: Unauthorized
        '404':
          description: Review not found

  /reviews/reported:
    get:
      tags:
        - Reviews
      summary: Get reported reviews
      description: Get list of reported reviews (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of reported reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required