paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: Retrieve a paginated list of books with optional filters
      parameters:
        - in: query
          name: category
          schema:
            type: string
            enum: [FICTION, NON_FICTION, BIOGRAPHY, SELF_HELP, TECHNOLOGY, HISTORY, MATH, SCIENCE, RELIGION, OTHER]
          description: Filter books by category
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of items per page
        - in: query
          name: sortBy
          schema:
            type: string
            default: createdAt
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: Sort order
      responses:
        '200':
          description: List of books retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer

    post:
      tags:
        - Books
      summary: Create a new book
      description: Create a new book (Admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '409':
          description: ISBN already exists

  /books/{id}:
    get:
      tags:
        - Books
      summary: Get book by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Book ID
      responses:
        '200':
          description: Book details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found

    put:
      tags:
        - Books
      summary: Update book
      description: Update book details (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Book ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '404':
          description: Book not found

    delete:
      tags:
        - Books
      summary: Delete book
      description: Delete a book and its reviews (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Book ID
      responses:
        '200':
          description: Book deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '404':
          description: Book not found

  /books/bulk:
    post:
      tags:
        - Books
      summary: Bulk create books
      description: Create multiple books at once (Admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                books:
                  type: array
                  items:
                    $ref: '#/components/schemas/BookInput'
      responses:
        '201':
          description: Books created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required